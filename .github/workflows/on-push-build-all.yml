name: Build Flutter Project

on:
  push:
    branches:
      - main
      - try/*
  pull_request:
    branches:
      - main

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  common-vars:
    name: Setup Build Variables
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.build-name }}.${{ github.run_number }}

    steps:
      - name: Set artifact name
        id: set-artifact-name
        run: |
          # Clean branch name for artifact naming
          CleanName="$(echo "$BRANCH_NAME" | sed -E 's/^(b|feat\/|try\/)//g' | sed -e 's/ /_/g' | sed -e 's/\//_/g')"
          echo "Clean branch name is: $CleanName"
          echo "build-name=$CleanName" >> "$GITHUB_OUTPUT"

  android-build:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: common-vars

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.27.1'

      # Step 4: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 5: Build the Android APK
      - name: Build APK
        run: flutter build apk --release

      # Step 6: Upload the APK as an artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ needs.common-vars.outputs.artifact-name }}
          path: build/app/outputs/flutter-apk/app-release.apk

  ios-build:
    name: Build iOS IPA
    runs-on: macos-latest
    needs: common-vars

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.27.1'

      # Step 3: Install CocoaPods
      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod setup

      # Step 4: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 5: Build the iOS IPA
      - name: Build IPA
        run: |
          cd ios
          flutter build ipa --release --export-method ad-hoc

      # Step 6: Upload the IPA as an artifact
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa-${{ needs.common-vars.outputs.artifact-name }}
          path: build/ios/ipa/*.ipa